# Free the original Ctrl-b prefix keybinding
unbind-key C-b
# Setting the prefix from C-b to `
set -g prefix `
set -g prefix2 C-a
bind ` send-prefix
bind C-a send-prefix -2

# Select, copy and paste text in tmux, in a vi-kind of fashion
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
# bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "printf '' | xclip && xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Automatically set window title
setw -g automatic-rename

# Setting the delay between prefix and command
set -s escape-time 1

# Set the base index for sessions to 1 instead of 0
# setw -g session-base-index 1

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the config file with Prefix r
bind r source $HOME/.tmux.conf \; display "Reloaded!"

# Zoom/Unzoom a pane
bind z resize-pane -Z

# Splitting panes with | and -
bind | split-window -h -c "#{pane_current_path}" \; display "Splitting horizontally!"
bind - split-window -v -c "#{pane_current_path}" \; display "Splitting vertically!"

# Moving between panes with Prefix h,j,k,l
bind h select-pane -L \; display "Selecting pane to the left!"
bind j select-pane -D \; display "Selecting pane below!"
bind k select-pane -U \; display "Selecting pane above!"
bind l select-pane -R \; display "Selecting pane to the right!"

# Quick window selection
bind -r C-h select-window -t:- \; # display "Selecting previous window!"
bind -r C-l select-window -t:+ \; # display "Selecting next window!"

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Mouse support - set to on if you want to use the mouse
set -g mouse off

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"
#set -g default-terminal "rxvt-unicode-256color"
set-option -sa terminal-overrides ',rxvt-unicode-256color:RGB'

# Set the status line's colors
set -g status-style fg=white,bold,bg=black

# Set the color of the window list
setw -g window-status-style fg=colour14,bg=black,dim

# Set the colors for the active window
# setw -g window-status-current-style fg=colour237,bold,underscore,bg=colour154
setw -g window-status-current-style fg=colour15,bold,bg=colour4

# Set colors for the pane borders
setw -g pane-border-style fg=blue,bg=black
setw -g pane-active-border-style fg=black,bg=colour14

# Set active pane normal, other shaded out
setw -g window-style fg=colour241,bg=colour236    # Non-active pane(s)
setw -g window-active-style fg=white,bg=colour232 # Active pane

# Command / message line
set -g message-style fg=white,bold,bg=black

# Status line left side to show Session:Window:Pane:
set -g status-left-length 60
set -g status-left "#[fg=green]Session: #S #[fg=cyan]Window: #I:#W #[fg=yellow]Pane: #P "

# Status line right side
set -g status-right "#[fg=colour6]%A %d-%B-%Y %R %z %Z"

# Update the status line every sixty seconds
set -g status-interval 60

# Center the window line in the status line
set -g status-justify centre

# Enable activity alerts (showing activity in un-active windows)
setw -g monitor-activity on
set -g visual-activity on

# Set the color of activity alerted windows
setw -g window-status-activity-style fg=white,bg=colour135 #fg is text-color

# Enable vi keys
setw -g mode-keys vi

# Capture pane and save to buffer.txt
# bind C-s capture-pane; save-buffer $HOME/buffer.txt

# Copy current buffer to the system clipboard
# bind C-c run "tmux capture-pane; tmux save-buffer | xclip -i -sel clipboard > /dev/null"
# bind C-s capture-pane && save-buffer $HOME/buffer.txt
bind C-c "choose-buffer"

# Change shell to use zsh
if-shell '[ $(uname -s) = Linux ]' \
    'set -g default-shell /bin/zsh'
    
if-shell '[ $(uname -s) = FreeBSD ]' \
    'set -g default-shell /usr/local/bin/zsh'
    

# Fix cursor changes in vi mode for zsh
set -as terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

set-option -g focus-events on

bind-key -r i run-shell "tmux new-window cht.sh"
bind-key -r s run-shell "tmux split-window -hb bash -c tmux_change_session"
bind-key -r f run-shell "tmux split-window -hb bash -c tmux_sessioninzer"
